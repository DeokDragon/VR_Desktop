Option Explicit

' 문자열을 유니코드 이스케이프 시퀀스로 변환하는 함수
Function ConvertToUnicodeEscapes(text As String) As String
    Dim result As String
    Dim i As Long
    Dim charCode As Long
    
    result = ""
    
    For i = 1 To Len(text)
        charCode = AscW(Mid(text, i, 1))
        
        ' ASCII 범위 내의 문자는 그대로 사용
        If charCode >= 32 And charCode <= 126 Then
            result = result & Mid(text, i, 1)
        Else
            ' 유니코드 이스케이프 시퀀스로 변환 (\uXXXX 형식)
            result = result & "\u" & Right("0000" & Hex(charCode), 4)
        End If
    Next i
    
    ConvertToUnicodeEscapes = result
End Function

' Excel 데이터를 JSON으로 변환하는 메인 매크로
Sub ExportToJSON()
    Dim ws As Worksheet
    Dim lastRow As Long, lastCol As Long
    Dim headers() As String
    Dim jsonString As String
    Dim filePath As String
    Dim i As Long, j As Long
    Dim dataObj As Object
    Dim dataArray() As Object
    
    ' 현재 활성화된 시트 선택
    Set ws = ActiveSheet
    
    ' 데이터의 마지막 행과 열 찾기
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
    
    ' 헤더 로드
    ReDim headers(1 To lastCol)
    For j = 1 To lastCol
        headers(j) = ws.Cells(1, j).Value
    Next j
    
    ' 데이터 배열 초기화
    ReDim dataArray(1 To lastRow - 1)
    
    ' 각 행을 JSON 객체로 변환
    For i = 2 To lastRow ' 2부터 시작 (헤더 제외)
        ' 새 객체 생성
        Set dataObj = CreateObject("Scripting.Dictionary")
        
        ' 각 열의 데이터 추가
        For j = 1 To lastCol
            ' 빈 셀 확인
            If Not IsEmpty(ws.Cells(i, j)) Then
                ' 데이터 타입에 따라 처리
                Select Case VarType(ws.Cells(i, j).Value)
                    Case vbInteger, vbLong, vbSingle, vbDouble, vbCurrency
                        ' 숫자는 그대로 추가
                        dataObj.Add headers(j), ws.Cells(i, j).Value
                    Case vbBoolean
                        ' 불리언 값 처리
                        dataObj.Add headers(j), ws.Cells(i, j).Value
                    Case Else
                        ' 문자열로 처리
                        dataObj.Add headers(j), CStr(ws.Cells(i, j).Value)
                End Select
            Else
                ' 빈 셀은 null로 처리
                dataObj.Add headers(j), Null
            End If
        Next j
        
        ' 객체를 배열에 추가
        Set dataArray(i - 1) = dataObj
    Next i
    
    ' JSON 문자열 생성
    jsonString = "["
    
    For i = 1 To UBound(dataArray)
        jsonString = jsonString & "{"
        
        ' 객체의 각 속성을 JSON 형식으로 추가
        For j = 1 To dataObj.Count
            Dim key As Variant
            key = headers(j)
            
            jsonString = jsonString & """" & key & """:"
            
            ' 값의 타입에 따라 처리
            If IsNull(dataArray(i)(key)) Then
                jsonString = jsonString & "null"
            ElseIf VarType(dataArray(i)(key)) = vbString Then
                ' 문자열은 따옴표로 묶고 유니코드 이스케이프 시퀀스로 변환
                Dim escapedString As String
                escapedString = Replace(dataArray(i)(key), """", "\""")
                escapedString = ConvertToUnicodeEscapes(escapedString)
                jsonString = jsonString & """" & escapedString & """"
            ElseIf VarType(dataArray(i)(key)) = vbBoolean Then
                ' 불리언 값은 true/false로 처리
                jsonString = jsonString & LCase(CStr(dataArray(i)(key)))
            Else
                ' 숫자는 그대로 추가
                jsonString = jsonString & CStr(dataArray(i)(key))
            End If
            
            ' 마지막 속성이 아닌 경우 쉼표 추가
            If j < dataObj.Count Then
                jsonString = jsonString & ","
            End If
        Next j
        
        jsonString = jsonString & "}"
        
        ' 마지막 객체가 아닌 경우 쉼표 추가
        If i < UBound(dataArray) Then
            jsonString = jsonString & ","
        End If
    Next i
    
    jsonString = jsonString & "]"
    
    ' 파일 저장 대화상자
    filePath = Application.GetSaveAsFilename(InitialFileName:=ws.Name & ".json", _
                                            FileFilter:="JSON Files (*.json), *.json", _
                                            Title:="JSON 파일 저장")
    
    ' 사용자가 취소하지 않은 경우 파일 저장
    If filePath <> "False" Then
        SaveTextToFile jsonString, filePath
        MsgBox "JSON 파일이 성공적으로 저장되었습니다: " & filePath, vbInformation
    End If
End Sub

' 문자열을 파일로 저장하는 함수
Private Sub SaveTextToFile(text As String, filePath As String)
    Dim fileNum As Integer
    fileNum = FreeFile
    
    Open filePath For Output As #fileNum
    Print #fileNum, text
    Close #fileNum
End Sub

' JSON 포맷을 예쁘게 만드는 함수 (선택사항)
Function PrettyJSON(jsonString As String) As String
    Dim result As String
    Dim indent As Integer
    Dim i As Long
    Dim char As String
    Dim inQuotes As Boolean
    
    result = ""
    indent = 0
    inQuotes = False
    
    For i = 1 To Len(jsonString)
        char = Mid(jsonString, i, 1)
        
        ' 따옴표 안/밖 상태 추적
        If char = """" And Mid(jsonString, i - 1, 1) <> "\" Then
            inQuotes = Not inQuotes
        End If
        
        If Not inQuotes Then
            ' 들여쓰기 처리
            Select Case char
                Case "{"
                    result = result & char & vbCrLf
                    indent = indent + 1
                    result = result & String(indent * 2, " ")
                Case "}"
                    result = result & vbCrLf
                    indent = indent - 1
                    result = result & String(indent * 2, " ") & char
                Case ":"
                    result = result & char & " "
                Case ","
                    result = result & char & vbCrLf
                    result = result & String(indent * 2, " ")
                Case "["
                    result = result & char & vbCrLf
                    indent = indent + 1
                    result = result & String(indent * 2, " ")
                Case "]"
                    result = result & vbCrLf
                    indent = indent - 1
                    result = result & String(indent * 2, " ") & char
                Case Else
                    result = result & char
            End Select
        Else
            ' 따옴표 안의 문자는 그대로 유지
            result = result & char
        End If
    Next i
    
    PrettyJSON = result
End Function